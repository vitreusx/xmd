<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classtf_1_1cudaScopedPerThreadStream" kind="class" language="C++" prot="public">
    <compoundname>tf::cudaScopedPerThreadStream</compoundname>
    <includes refid="cuda__stream_8hpp" local="no">cuda_stream.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtf_1_1cudaScopedPerThreadStream_1a2d679eeb009eb2065782a2b243424f68" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/memory/shared_ptr" kindref="compound" external="/home/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::shared_ptr</ref>&lt; cudaPerThreadStreamPool::Object &gt;</type>
        <definition>std::shared_ptr&lt;cudaPerThreadStreamPool::Object&gt; tf::cudaScopedPerThreadStream::_ptr</definition>
        <argsstring></argsstring>
        <name>_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="143" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtf_1_1cudaScopedPerThreadStream_1af7845519bb39a1503f68cabd904b9058" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaScopedPerThreadStream::cudaScopedPerThreadStream</definition>
        <argsstring>(int device)</argsstring>
        <name>cudaScopedPerThreadStream</name>
        <param>
          <type>int</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>constructs a scoped stream under the given device </para>        </briefdescription>
        <detaileddescription>
<para>The constructor acquires a stream from a per-thread stream pool.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>device context of the requested stream </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="90" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaScopedPerThreadStream_1a622ecdebd6a710b8487ce64d7a57ae8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaScopedPerThreadStream::cudaScopedPerThreadStream</definition>
        <argsstring>()</argsstring>
        <name>cudaScopedPerThreadStream</name>
        <briefdescription>
<para>constructs a scoped stream under the current device. </para>        </briefdescription>
        <detaileddescription>
<para>The constructor acquires a stream from a per-thread stream pool. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="99" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaScopedPerThreadStream_1afc14e0188999c6e258a7f1d8f64aeea5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaScopedPerThreadStream::~cudaScopedPerThreadStream</definition>
        <argsstring>()</argsstring>
        <name>~cudaScopedPerThreadStream</name>
        <briefdescription>
<para>destructs the scoped stream guard </para>        </briefdescription>
        <detaileddescription>
<para>The destructor releases the stream to the per-thread stream pool. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="108" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaScopedPerThreadStream_1a950b52dc159d34977807026e73b1b50c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaScopedPerThreadStream::operator cudaStream_t</definition>
        <argsstring>() const</argsstring>
        <name>operator cudaStream_t</name>
        <briefdescription>
<para>implicit conversion to the native CUDA stream (cudaStream_t) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="117" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaScopedPerThreadStream_1ae8cb76c1cb6b762ad134a4f2d1da001e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::cudaScopedPerThreadStream::cudaScopedPerThreadStream</definition>
        <argsstring>(const cudaScopedPerThreadStream &amp;)=delete</argsstring>
        <name>cudaScopedPerThreadStream</name>
        <param>
          <type>const <ref refid="classtf_1_1cudaScopedPerThreadStream" kindref="compound">cudaScopedPerThreadStream</ref> &amp;</type>
        </param>
        <briefdescription>
<para>disabled copy constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaScopedPerThreadStream_1a44450702b732d4e560aa24ba6b82d02a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::cudaScopedPerThreadStream::cudaScopedPerThreadStream</definition>
        <argsstring>(cudaScopedPerThreadStream &amp;&amp;)=default</argsstring>
        <name>cudaScopedPerThreadStream</name>
        <param>
          <type><ref refid="classtf_1_1cudaScopedPerThreadStream" kindref="compound">cudaScopedPerThreadStream</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>default move constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaScopedPerThreadStream_1a5f68d97c82b9f4232469cf4d532b09cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtf_1_1cudaScopedPerThreadStream" kindref="compound">cudaScopedPerThreadStream</ref> &amp;</type>
        <definition>cudaScopedPerThreadStream&amp; tf::cudaScopedPerThreadStream::operator=</definition>
        <argsstring>(const cudaScopedPerThreadStream &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtf_1_1cudaScopedPerThreadStream" kindref="compound">cudaScopedPerThreadStream</ref> &amp;</type>
        </param>
        <briefdescription>
<para>disabled copy assignment </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaScopedPerThreadStream_1a34070ffa4860a4ba312ce7bb213bc6f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtf_1_1cudaScopedPerThreadStream" kindref="compound">cudaScopedPerThreadStream</ref> &amp;</type>
        <definition>cudaScopedPerThreadStream&amp; tf::cudaScopedPerThreadStream::operator=</definition>
        <argsstring>(cudaScopedPerThreadStream &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classtf_1_1cudaScopedPerThreadStream" kindref="compound">cudaScopedPerThreadStream</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>default move assignment </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="139" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>class that provides RAII-styled guard of stream acquisition </para>    </briefdescription>
    <detaileddescription>
<para>Sample usage:</para><para><programlisting filename=".cpp"><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classtf_1_1cudaScopedPerThreadStream" kindref="compound">tf::cudaScopedPerThreadStream</ref><sp/>stream(1);<sp/><sp/></highlight><highlight class="comment">//<sp/>acquires<sp/>a<sp/>stream<sp/>on<sp/>device<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>stream<sp/>as<sp/>a<sp/>normal<sp/>cuda<sp/>stream<sp/>(cudaStream_t)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>cudaStreamWaitEvent(stream,<sp/>...);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>leaving<sp/>the<sp/>scope<sp/>releases<sp/>the<sp/>stream<sp/>back<sp/>to<sp/>the<sp/>pool<sp/>on<sp/>device<sp/>1</highlight></codeline>
</programlisting></para><para>The scoped per-thread stream is primarily used by <ref refid="classtf_1_1Executor" kindref="compound">tf::Executor</ref> to execute CUDA tasks (e.g., <ref refid="classtf_1_1cudaFlow" kindref="compound">tf::cudaFlow</ref>, <ref refid="classtf_1_1cudaFlowCapturer" kindref="compound">tf::cudaFlowCapturer</ref>).</para><para>cudaScopedPerThreadStream is non-copyable. </para>    </detaileddescription>
    <location file="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" line="79" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/cuda/cuda_stream.hpp" bodystart="79" bodyend="145"/>
    <listofallmembers>
      <member refid="classtf_1_1cudaScopedPerThreadStream_1a2d679eeb009eb2065782a2b243424f68" prot="private" virt="non-virtual"><scope>tf::cudaScopedPerThreadStream</scope><name>_ptr</name></member>
      <member refid="classtf_1_1cudaScopedPerThreadStream_1af7845519bb39a1503f68cabd904b9058" prot="public" virt="non-virtual"><scope>tf::cudaScopedPerThreadStream</scope><name>cudaScopedPerThreadStream</name></member>
      <member refid="classtf_1_1cudaScopedPerThreadStream_1a622ecdebd6a710b8487ce64d7a57ae8d" prot="public" virt="non-virtual"><scope>tf::cudaScopedPerThreadStream</scope><name>cudaScopedPerThreadStream</name></member>
      <member refid="classtf_1_1cudaScopedPerThreadStream_1ae8cb76c1cb6b762ad134a4f2d1da001e" prot="public" virt="non-virtual"><scope>tf::cudaScopedPerThreadStream</scope><name>cudaScopedPerThreadStream</name></member>
      <member refid="classtf_1_1cudaScopedPerThreadStream_1a44450702b732d4e560aa24ba6b82d02a" prot="public" virt="non-virtual"><scope>tf::cudaScopedPerThreadStream</scope><name>cudaScopedPerThreadStream</name></member>
      <member refid="classtf_1_1cudaScopedPerThreadStream_1a950b52dc159d34977807026e73b1b50c" prot="public" virt="non-virtual"><scope>tf::cudaScopedPerThreadStream</scope><name>operator cudaStream_t</name></member>
      <member refid="classtf_1_1cudaScopedPerThreadStream_1a5f68d97c82b9f4232469cf4d532b09cb" prot="public" virt="non-virtual"><scope>tf::cudaScopedPerThreadStream</scope><name>operator=</name></member>
      <member refid="classtf_1_1cudaScopedPerThreadStream_1a34070ffa4860a4ba312ce7bb213bc6f5" prot="public" virt="non-virtual"><scope>tf::cudaScopedPerThreadStream</scope><name>operator=</name></member>
      <member refid="classtf_1_1cudaScopedPerThreadStream_1afc14e0188999c6e258a7f1d8f64aeea5" prot="public" virt="non-virtual"><scope>tf::cudaScopedPerThreadStream</scope><name>~cudaScopedPerThreadStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
