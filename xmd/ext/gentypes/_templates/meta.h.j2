#define NARG(...) __NARG_I_(__VA_ARGS__, __RSEQ_N())
#define __NARG_I_(...) __ARG_N(__VA_ARGS__)
#define __ARG_N(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14,   \
                _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26,    \
                _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38,    \
                _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50,    \
                _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62,    \
                _63, N, ...)                                                   \
  N
#define __RSEQ_N()                                                             \
  63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45,  \
      44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27,  \
      26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9,   \
      8, 7, 6, 5, 4, 3, 2, 1, 0

{% for version in ["", "_ALT"] %}
    #define VFUNC_AUX2{{version}}(name, n) name##n
    #define VFUNC_AUX1{{version}}(name, n) VFUNC_AUX2{{version}}(name, n)
    #define VFUNC{{version}}(func, ...) VFUNC_AUX1{{version}}(func, NARG(__VA_ARGS__))(__VA_ARGS__)
{% endfor %}

#define NO_TEMPLATE() VFUNC_ALT(TEMPLATE_, TEMPLATE_PARAMS(_))
#define TEMPLATE(...) VFUNC_ALT(TEMPLATE_, TEMPLATE_PARAMS(__VA_ARGS__, _))

{% macro _macro_args(n) %}
    {%- set comma = joiner(",") -%}
    {%- for idx in range(1, n+1) -%}
        {{comma()}}spec{{idx}},tv{{idx}}
    {%- endfor -%},_
{%- endmacro %}

{% macro _template_list(n) -%}
    {%- set comma = joiner(",") -%}
    template<{%- for idx in range(1, n+1) -%}
        {{comma()}}spec{{idx}} tv{{idx}}
    {%- endfor -%}>
{%- endmacro %}

#define TEMPLATE_1(_)
{% for n in range(1, MAX_TEMPLATE_PARAMS+1) %}
    #define TEMPLATE_{{2*n+1}}({{_macro_args(n)}}) {{_template_list(n)}}
{% endfor %}

#define NO_SPEC() VFUNC_ALT(SPEC_, TEMPLATE_PARAMS(_))
#define SPEC(...) VFUNC_ALT(SPEC_, TEMPLATE_PARAMS(__VA_ARGS__, _))

{% macro _spec_list(n) -%}
    {%- set comma = joiner(",") -%}
    <{%- for idx in range(1, n+1) -%}
        {{comma()}}tv{{idx}}
    {%- endfor -%}>
{%- endmacro %}

#define SPEC_1(_) 
{% for n in range(1, MAX_TEMPLATE_PARAMS+1) %}
    #define SPEC_{{2*n+1}}({{_macro_args(n)}}) {{_spec_list(n)}}
{% endfor %}

#define NULL_SPEC() VFUNC_ALT(NULL_SPEC_, TEMPLATE_PARAMS(_))

#define NULL_SPEC_1(_) template<>
{% for n in range(1, MAX_TEMPLATE_PARAMS+1) %}
    #define NULL_SPEC_{{2*n+1}}({{_macro_args(n)}}) {{_template_list(n)}}
{% endfor %}