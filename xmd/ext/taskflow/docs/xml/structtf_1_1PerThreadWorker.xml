<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structtf_1_1PerThreadWorker" kind="struct" language="C++" prot="private">
    <compoundname>tf::PerThreadWorker</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtf_1_1PerThreadWorker_1a7d45d6e09f51218d426c2a1886bd2cf5" prot="public" static="no" mutable="no">
        <type><ref refid="classtf_1_1Worker" kindref="compound">Worker</ref> *</type>
        <definition>Worker* tf::PerThreadWorker::worker</definition>
        <argsstring></argsstring>
        <name>worker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/core/worker.hpp" line="70" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/core/worker.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtf_1_1PerThreadWorker_1a8735c10c5d737cebc099ce0253793de7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::PerThreadWorker::PerThreadWorker</definition>
        <argsstring>()</argsstring>
        <name>PerThreadWorker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/core/worker.hpp" line="72" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/core/worker.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structtf_1_1PerThreadWorker_1a7989eea669d2ecc0f8936b862099b6fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::PerThreadWorker::PerThreadWorker</definition>
        <argsstring>(const PerThreadWorker &amp;)=delete</argsstring>
        <name>PerThreadWorker</name>
        <param>
          <type>const PerThreadWorker &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/core/worker.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structtf_1_1PerThreadWorker_1a66b002b2b5545e342d5df61191516f8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::PerThreadWorker::PerThreadWorker</definition>
        <argsstring>(PerThreadWorker &amp;&amp;)=delete</argsstring>
        <name>PerThreadWorker</name>
        <param>
          <type>PerThreadWorker &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/core/worker.hpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structtf_1_1PerThreadWorker_1a09e6030d04cea4fdb6d9a1677bc64a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PerThreadWorker &amp;</type>
        <definition>PerThreadWorker&amp; tf::PerThreadWorker::operator=</definition>
        <argsstring>(const PerThreadWorker &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const PerThreadWorker &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/core/worker.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structtf_1_1PerThreadWorker_1afa399a874416b9d3d885a929ad8c7aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PerThreadWorker &amp;</type>
        <definition>PerThreadWorker&amp; tf::PerThreadWorker::operator=</definition>
        <argsstring>(PerThreadWorker &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>PerThreadWorker &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/twhuang/Code/taskflow/taskflow/core/worker.hpp" line="78" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="125">
        <label>tf::PerThreadWorker</label>
        <childnode refid="126" relation="usage">
          <edgelabel>worker</edgelabel>
        </childnode>
      </node>
      <node id="126">
        <label>tf::Worker</label>
        <link refid="classtf_1_1Worker"/>
      </node>
    </collaborationgraph>
    <location file="/home/twhuang/Code/taskflow/taskflow/core/worker.hpp" line="68" column="1" bodyfile="/home/twhuang/Code/taskflow/taskflow/core/worker.hpp" bodystart="68" bodyend="79"/>
    <listofallmembers>
      <member refid="structtf_1_1PerThreadWorker_1a09e6030d04cea4fdb6d9a1677bc64a8a" prot="public" virt="non-virtual"><scope>tf::PerThreadWorker</scope><name>operator=</name></member>
      <member refid="structtf_1_1PerThreadWorker_1afa399a874416b9d3d885a929ad8c7aeb" prot="public" virt="non-virtual"><scope>tf::PerThreadWorker</scope><name>operator=</name></member>
      <member refid="structtf_1_1PerThreadWorker_1a8735c10c5d737cebc099ce0253793de7" prot="public" virt="non-virtual"><scope>tf::PerThreadWorker</scope><name>PerThreadWorker</name></member>
      <member refid="structtf_1_1PerThreadWorker_1a7989eea669d2ecc0f8936b862099b6fa" prot="public" virt="non-virtual"><scope>tf::PerThreadWorker</scope><name>PerThreadWorker</name></member>
      <member refid="structtf_1_1PerThreadWorker_1a66b002b2b5545e342d5df61191516f8a" prot="public" virt="non-virtual"><scope>tf::PerThreadWorker</scope><name>PerThreadWorker</name></member>
      <member refid="structtf_1_1PerThreadWorker_1a7d45d6e09f51218d426c2a1886bd2cf5" prot="public" virt="non-virtual"><scope>tf::PerThreadWorker</scope><name>worker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
